#!/bin/bash
#####
# Virtual machines on this platform make use of a pvgrub bootloader.
# Ubuntu kernels are published with lz4 compression, which is unsupported by pvgrub.
#
# This script decompresses a given kernel file, replacing the original so it is
# bootable on the platform.
#####

KERNEL_VERSION="$1"
KERNEL_PATH="$2"

# extract-vmlinux is in /usr/local/bin
PATH="${PATH}:/usr/local/bin"

# Ensure we have the extract-linux tool
if ! command -v extract-vmlinux > /dev/null; then
        echo >&2 "Command 'extract-vmlinux' is not available (https://raw.githubusercontent.com/torvalds/linux/master/scripts/extract-vmlinux),  Aborting"
        exit 1
fi

# The KERNEL_PATH must be valid
if [ ! -f "${KERNEL_PATH}" ]; then
        echo >&2 "Kernel file '${KERNEL_PATH}' not found. Aborting"
        exit 1
fi

# Check if already an ELF image
if file -b "${KERNEL_PATH}" | grep -q "^ELF 64-bit LSB executable"; then
    echo "Kernel file '${KERNEL_PATH}' appears to be decompressed already. Skipping."
    exit 0
fi

# Create a temp file
TEMP_FILE=$(mktemp /tmp/decompress-kernel-XXXXX)
trap "rm -f ${TEMP_FILE}" EXIT

# Extract the kernel and replace existing if successful
echo "Attempting to decompress '${KERNEL_PATH}'..."
if extract-vmlinux "${KERNEL_PATH}" > "${TEMP_FILE}"; then
    if readelf -h "${TEMP_FILE}" > /dev/null; then
        echo "Decompression successful, replacing original kernel file."
        cp -v "${TEMP_FILE}" "${KERNEL_PATH}"
        exit 0
    else
        echo >&2 "Decompression failed: not a valid ELF image."
        exit 1
    fi
else
    echo "No supported compression format detected or already uncompressed. Skipping."
    exit 0
fi
